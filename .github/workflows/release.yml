name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow for version tags (e.g., v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
          - aarch64-unknown-linux-gnu
          - aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Extract Version
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          tar -czvf jstern_${{ env.VERSION }}_${{ matrix.target }}.tar.gz -C target/${{ matrix.target }}/release jstern

      - name: Generate checksum
        run: |
          sha256sum jstern_${{ env.VERSION }}_${{ matrix.target }}.tar.gz >> checksums.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: jstern-${{ env.VERSION }}-${{ matrix.target }}
          path: jstern_${{ env.VERSION }}_${{ matrix.target }}.tar.gz

      - name: Upload checksum
        uses: actions/upload-artifact@v2
        with:
          name: checksums
          path: checksums.txt

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release ${{ github.ref }}"
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: jstern_${{ env.VERSION }}_${{ matrix.target }}.tar.gz
          asset_name: jstern_${{ env.VERSION }}_${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Checksum to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain
